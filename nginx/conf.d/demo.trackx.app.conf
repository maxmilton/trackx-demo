limit_req_zone $binary_remote_addr zone=demo_login:10m rate=3r/m;
limit_req_zone $binary_remote_addr zone=demo_dash:1m rate=5r/s;

upstream demo_nodejs_backend {
  server 127.0.0.1:8100;
  keepalive 8;
  keepalive_timeout 30s;
}

server {
  listen [::]:443 ssl http2;
  listen 443 ssl http2;
  server_name demo.trackx.app;

  include conf/tls/ssl_engine.conf;
  ssl_certificate     /etc/nginx/certs/trackx.app.crt;
  ssl_certificate_key /etc/nginx/certs/trackx.app.key;
  include conf/tls/policy_strict.conf;

  root /var/www/demotrackxapp/html;

  include conf/security/x-content-type-options.conf;
  include conf/security/x-frame-options.conf;
  include conf/security/cross-origin-policy.conf;
  include conf/location/security_file_access.conf;
  include conf/web_performance/cache-file-descriptors.conf;

  add_header Reporting-Endpoints 'default="https://api.trackx.app/v1/upvt8nvogp4/report"' always;
  add_header Report-To '{"endpoints":[{"url":"https://api.trackx.app/v1/upvt8nvogp4/report"}],"group":"default","max_age":604800}' always;
  add_header NEL '{"report_to":"default","max_age":604800}' always;
  # TODO: Add report-to directive if/when it's well supported in browsers
  add_header Content-Security-Policy "default-src 'none';script-src 'self' 'report-sample';style-src 'self';font-src https://fonts.gstatic.com;img-src 'self' data: https://api.trackx.app;manifest-src 'self';connect-src 'self' https://api.trackx.app;base-uri 'none';report-uri https://api.trackx.app/v1/upvt8nvogp4/report;" always;

  location /api/dash/ {
    limit_req zone=demo_dash burst=10 nodelay;

    # reduce the need for repeated handshakes
    keepalive_timeout 300s;

    proxy_http_version 1.1;
    proxy_set_header Connection '';
    proxy_set_header Host $host;
    proxy_pass_request_headers on;
    proxy_pass http://demo_nodejs_backend/dash/;
  }

  location = /api/dash/login {
    limit_except POST { deny all; }
    limit_req zone=demo_login burst=4 nodelay;
    add_header Access-Control-Allow-Origin 'https://demo.trackx.app' always;

    proxy_http_version 1.1;
    proxy_set_header Connection '';
    proxy_set_header Host $host;
    proxy_pass_request_headers on;
    proxy_pass http://demo_nodejs_backend/dash/login;
  }

  location /api/ {
    return 444;
  }

  location / {
    try_files $uri /index.html =404;
  }

  location = / {
    try_files /index.html =404;
  }

  location = /login {
    try_files /login.html =404;
  }
}
